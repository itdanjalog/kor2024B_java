[1] 메소드 란 ?
    - 멤버 함수 또는 메소드 라고 불린다.
    - 함수/메소드
        -> 함(담을 함) , 수 : 숫자 뜻 : 숫자를 담은 함
        -> 누군가 가 미리 숫자들을 담았다. -> 미리 코드 들을  담았다.
        * 변수란 : 하나의 자료를 저장하는 메모리 공간
        * 함수/메소드: 코드/명령어 들을 저장하는 공간

    - 함수/메소드 사용하는 이유 ,
        1. 코드 재사용 : 미리 정의된 코드들을 반복 사용하기 위해서 사용된다.
        2. 클린코딩(중복된 코드를 제거 ) : 코드의 중복을 줄이고 조금 더 간결한 코딩을 할수 있다.
        3. 유지보수 : 특정한 기준으로 코드들을 { } 중괄호를 이용해서 묶었기 때문에 묶음 단위 이므로 유지보수가 좋아진다.
        4. 가독성 : 기능별로 묶었기 때문에 코드 읽기가 편하다.
        5. 라이브러리/프레임워크 : (남이 만든) 함수의 내부적인 코드를 몰라도 함수 사용은 가능하다.
            System.out.print() : print() 함수가 어떻게 만들어졌는지는 모르지만 사용/활용 가능하다.

    - 변수 사용하는 이유 : 1. 자료를 여러번 사용하기 위해 2.복잡한 계산식의 결과를 하나의 메모리에서 사용 등등

    - 함수

            X = 3 , Y = 5   <-- 함수 입구 ( 매개변수의값 , 인자값 , 인수 )
        |------     ------|
        |                 |
        |      X + Y      | 함수내부( 여러 명령어/코드 )
        |                 |
        |-------    ------|
            result = 8      <--- 함수 출구 ( 리턴값 , 반환값 )

    - 메소드 선언하는 방법
        반환타입 메소드명( 타입 매개변수명 , 타입 매개변수명 ) {
            코드명령어;
            코드명령어;
            코드명령어;
            return 값; <--- 반환타입의 허용범위내 값을 반환 할수 있다.
        }

    - 용어
        1. 매개변수 : 함수 호출/사용 시 함수 안으로 들어오는 값를 저장하는 변수
        2. 반환값 : 함수 종료 될때 함수를 호출했던 곳으로 반환 해주는 값
        3. 반환타입 : 반환값의 허용범위 타입 지정
        4. 실행문 : 함수가 호출될때 실행되는 코드명령어.

















