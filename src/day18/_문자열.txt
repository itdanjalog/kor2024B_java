- JAVA 에서의 문자를 다루는 방법
    - 컴퓨터가 문자를 처리하는 방법
        - 컴퓨터는 0과1 만 다루는 기계어
        - 컴퓨터는 0과1 로 조합된 8칸의 문자규칙
            - 아스키코드 : 사람(문자) <-----> 컴퓨터(0/1)
                             A   --------- > 1000001(A)
                             B   <---------- 1000010(B)
                        숫자,영대소문자,특정특수문자를 표현 = 2(7승) => 128문자 표현
            - 유니코드 : 전세계 거의 모든 문자를 지원하는 문자 규칙

[0] 문자 : 하나의 문자
    - 'char' 기본 타입 이용한 문자 자료 다룬다.
    - ' ' 작은따옴표 로 감싼 문자1개

[1] 문자열 : 연속된 문자들
    - 'String' 참조 타입 이용한 문자열 자료 다룬다.
    -
        1. " " 큰따옴표 로 감싼 문자n개 # 리터럴
        2. new String(" ") ; 생성자 작성한 문자n개 # 객체(리터럴)

    - == vs .equals( )
        == 변수 자체의 값을 비교 # 리터럴값들을 비교한다 # 기본타입 값 만 비교할수 있다.
        .equals() 변수가 가지는 참조 객체를 비교 # 리터럴값 비교가 아닌 객체비교 # 참조타입 비교한다.

[2] 자바에서 자주 사용되는 문자열 함수/기능들
    1. "문자열".charAt(인덱스) : 지정한 인덱스번호 에 위치한 문자 1개 반환 함수
    2. "문자열".length()  # 지정한 문자열의 길이 # 문자개수 반환 함수
    3. "문자열".replace( "기존문자" , "새로운문자" ) # 지정한 문자열내 기존문자가 존재하면 새로운문자 치환/교체 해서 새로운 문자열 반환
    4. "문자열".subString(  )
        "문자열".subString( 시작인덱스 ) : # 시작인덱스 부터 문자열 잘라내서 반환하는 함수
        "문자열".subString( 시작인덱스 , 끝인덱스 ) : # 시작인덱스 부터 끝인덱스 전까지 잘라내서 반환하는 함수
    5. "문자열".split("구분문자")   # 문자열내 구분문자가 존재하면 구문문자 기준으로 분해 해서 (문자열)배열 로 반환
    6. "문자열".indexOf("찾을문자") # 문자열내 찾을문자가 존재하면 찾은 문자열이 위치한 인덱스 번호 반환 , 없으면 -1 반환 한다.
    7. "문자열".contains("찾을문자") # 문자열내 찾을문자가 존재하면 true 반환 , 없으면 false 반환 하는 함수
    8. "문자열".getBytes() : # 문자열내 문자 하나씩 바이트로 변환후 바이트 배열로 반환 함수
    9. new String( 바이트배열 ) # 지정한 바이트배열을 문자열 변환 해주는 문자열 클래스 생성자
        new String( 바이트배열 , ) # 지정한 바이트배열을 문자열 변환 해주는 문자열 클래스 생성자

